<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.itwillbs.funding.mapper.ProjectCreateMapper">
  
  	
  	<!-- 05-16 김동욱 top.jsp에서 프로젝트 만들기 버튼 누를 시 새로운 프로젝트 생성 -->
  	<!-- 05-12 project_images가 프로젝트 생성될 떄 null 스트링이 들어가도록 수정 -->
 	<insert id="createFundingProject">
 		INSERT INTO project VALUES(
 			null
 			, ${member_idx}
 			, null
 			, null
 			, null
 			, null
 			, null
 			, ""
 			, null
 			, null
 			, null
 			, null
 			, null
 			, null
 			, null
 			, null
 			, null
 			, 0
 			, null
 			, null
 			, 0
 			, null
 			, now()
 			)
 	</insert>
 	
 	<!-- 05-16 김동욱 메이커 마이페이지에 프로젝트 리스트 출력 -->
 	<select id="getProjectList" resultType="com.itwillbs.funding.vo.ProjectVO">
 		SELECT *
 		FROM project
 		WHERE member_idx = ${member_idx};
 	</select>
 	
 	<!-- 05-17 김동욱 프로젝트 스토리 작성 업데이트(project_summary, project_content, project_image) -->
 	<!-- 05-22 김동욱 프로젝트 스토리 업데이트에서 project_images 삭제 -->
 	<update id="projectStoryUpdate">
 		UPDATE project SET
 		project_summary = #{project_summary}
 		,project_content = #{project_content}
 		where project_idx = #{project_idx}
 	</update>
 	
 	<!-- 05-17 김동욱 프로젝트 리워드 추가 -->
 	<insert id="projectRewardAdd">
 		INSERT INTO reward
 			VALUES(null
 				   , #{project_idx}
 				   , #{reward_name}
 				   , #{reward_amount}
 				   , #{reward_content}
 				   , #{reward_option}
 				   , #{reward_quantity}
 				   , #{reward_delivery}
 				   , #{reward_delivery_fee}
 				   , #{reward_delivery_date}
 				   , "0"
 				   )
 	</insert>
 	
 	<!-- 05-17 김동욱 프로젝트 리워드 리스트 -->
 	<select id="getProjectReward" resultType="com.itwillbs.funding.vo.RewardVO">
 		SELECT *
 		FROM reward
 		WHERE project_idx = #{project_idx}
 	</select>
 	
 	<!-- 05-18 김동욱 AJAX 리워드 상세 정보 가져오기 -->
 	<select id="getRewardDetail" resultType="com.itwillbs.funding.vo.RewardVO">
 		SELECT *
 		FROM reward
 		WHERE reward_idx = #{reward_idx}
 	</select>
  
  	<update id="projectPlanUpdate">
	  	UPDATE project SET
	 		project_plan = #{project_plan}
	 	WHERE project_idx = #{project_idx}
  	</update>
  	
  	<update id="InfoUpdate">
	  	UPDATE project SET
			project_category = #{project_category},
			project_introduce = #{project_introduce},
			project_type = #{project_type},
			project_target = #{project_target},
			project_reward_produce_type = #{project_reward_produce_type},
			project_reward_category = #{project_reward_category}
	 	WHERE project_idx = #{project_idx}
  	</update>
  	
  	<update id="projectBaseInfoFileUpdate">
	  	UPDATE project SET
			project_thumbnail = #{project_thumbnail}
	 	WHERE project_idx = #{project_idx}
  	</update>
  	
  	<update id="projectBaseInfoUpdate">
	  	UPDATE project SET
			project_title = #{project_title},
			project_adult = #{project_adult},
			project_end_date = #{project_end_date}
	 	WHERE project_idx = #{project_idx}
  	</update>
  	
  	<update id="projectInfoFileUpdate">
	  	UPDATE project SET
			project_identity = #{project_identity},
			project_documents = #{project_documents}
	 	WHERE project_idx = #{project_idx}
  	</update> 	
 	
 	<!-- 05-19 김동욱 AJAX 리워드 정보 수정하기-->
 	<update id="rewardModify">
 		UPDATE reward SET
 			reward_name = #{reward_name}
 			, reward_amount = #{reward_amount}
 			, reward_content = #{reward_content}
 			, reward_option = #{reward_option}
 			, reward_quantity = #{reward_quantity}
 			, reward_delivery = #{reward_delivery}
 			, reward_delivery_fee = #{reward_delivery_fee}
 			, reward_delivery_date = #{reward_delivery_date}
 			WHERE reward_idx = #{reward_idx}
 	</update>
 	
 	<!-- 05-19 김동욱 AJAX 리워드 삭제하기 -->
 	<delete id="rewardDelete">
 		DELETE FROM reward WHERE reward_idx = #{reward_idx}
 	</delete>
 	
 	<!-- 05-22 김동욱 기존 등록된 이미지 가져오기 -->
 	<select id="getImages" resultType="String">
 		SELECT project_images
 		FROM project
 		WHERE project_idx = #{project_idx}
 	</select>
 	
 	<!-- 05-22 김동욱 AJAX 이미지 추가 -->
 	<update id="projectAddImages">
 		UPDATE project SET project_images = #{project_images}
 		WHERE project_idx = #{project_idx}
 	</update>
 	
 	<select id="getProjectStory" resultType="com.itwillbs.funding.vo.ProjectVO">
 		SELECT project_summary, project_content
 		FROM project
 		WHERE project_idx = #{project_idx}
 	</select>
 	
 	<!-- 김동욱 05-25 메이커 리스트 가져오기 -->
 	<select id="getMakerList" resultType="com.itwillbs.funding.vo.MakerVO">
 		SELECT *
 		FROM maker
 		WHERE member_idx = #{member_idx}
 	</select>
 	
 	<!-- 김동욱 05-25 메이커 정보 등록 -->
 	<insert id="makerInfoInsert">
 		INSERT
 			INTO maker
 				VALUES(
 					null
 					, #{member_idx}
 					, "1"
 					, #{maker_name}
 					, #{maker_image}
 					, #{maker_phone}
 					, #{maker_email}
 				)
 	</insert>
 	
 	<!-- 김동욱 05-25 메이커 정보 가져오기 -->
 	<select id="getMakerInfo" resultType="com.itwillbs.funding.vo.MakerVO">
 		SELECT *
 		FROM maker
 		WHERE maker_idx = #{maker_idx}
 	</select>
 	
 	<!-- 김동욱 05-25 메이커 정보 수정 -->
 	<update id="makerInfoUpdate">
 		UPDATE maker
 			SET
 				maker_name = #{maker_name}
 				<if test="maker_image != '' and maker_image != null">
 					, maker_image = #{maker_image}
 				</if>
 				, maker_phone = #{maker_phone}
 				, maker_email = #{maker_email}
 			WHERE maker_idx = #{maker_idx}
 	</update>
 	
 	<!-- 05-26 김동욱 maker정보를 클릭하면 프로젝트 테이블에 maker_idx 업데이트 -->
 	<update id="projectMakerIdxUpdate">
 		UPDATE project SET maker_idx = #{maker_idx}
 		WHERE project_idx = ${project_idx}
 	</update>
 	
 	<!-- 05-26 김동욱 해당 프로젝트에 등록된 메이커 정보 가져오기 -->
 	<select id="myProjectMakerInfo" resultType="com.itwillbs.funding.vo.MakerVO">
 		SELECT p.maker_idx, maker_name
		FROM project p JOIN maker m
		ON p.maker_idx = m.maker_idx
		WHERE project_idx = #{project_idx}
 	</select>
 	
 	<!-- 05-26 김동욱 메이커 정보 삭제 -->
 	<delete id="deleteMakerInfo">
 		DELETE from maker WHERE maker_idx = #{maker_idx}
 	</delete>
 	
 	<!-- 05-26 김동욱 프로젝트 플랜 정보 가져오기 --> 
 	<select id="getProjectPlan" resultType="String">
 		SELECT project_plan
 		FROM project
 		WHERE project_idx = #{project_idx}
 	</select>
 	
 	<!-- 05-27 김동욱 AJAX 메이커명 중복 체크 -->
 	<select id="makerNameDuplicateCheck" resultType="String">
 		SELECT maker_name
 		FROM maker
 		WHERE maker_name = #{maker_name}
 	</select>
 	
 	<!-- 05-27 김동욱 삭제했던 메이커 정보를 프로젝트 테이블에서 null로 업데이트 -->
 	<update id="deleteProjeckMaker">
 		UPDATE project SET maker_idx = null
 		WHERE maker_idx = #{maker_idx}
 	</update>
 	
 	<!-- 05-29 김동욱 프로젝트 테이블에서 각 테이블이 업데이트가 되었는 지 체크용  -->
 	<select id="projectUpdateCheck" resultType="map">
 		SELECT *
 		FROM project
 		WHERE project_idx = #{project_idx}
 	</select>
 	
 	<!-- 05-30 김동욱 대표자 및 정산 정보 INSERT  -->
 	<insert id="repInfoInsert">
 		INSERT INTO representative
 		VALUES (
 			null
 			, #{member_idx}
 			, #{rep_name}
 			, #{rep_email}
 			, #{rep_tax_email}
 			, #{rep_tax_bank}
 			, #{rep_tax_account}
 			, #{rep_tax_depositor}
 		)
 	</insert>
 	
 	<!-- 05-30 김동욱 대표자 및 정산 정보 불러오기  -->
 	<select id="getMyRepresentativeInfo" resultType="map">
 		SELECT *
 		FROM representative
 		WHERE member_idx = #{member_idx}
 	</select>
 	
 	<!-- 05-30 김동욱 프로젝트 approve 0으로 업데이트(제출하기)  -->
 	<update id="projectApproveSubmit">
 		UPDATE project SET project_approve = "0" WHERE project_idx = #{project_idx}
 	</update>
 	
  </mapper>